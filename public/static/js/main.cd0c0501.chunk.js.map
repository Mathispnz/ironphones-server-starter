{"version":3,"sources":["components/HomePage.js","components/NotFound.js","components/PhoneList.js","components/PhoneDetails.js","components/AddPhone.js","components/SignupPage.js","components/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","react_default","a","createElement","className","Component","NotFound","Link","to","getPhoneUrl","onePhone","concat","_id","PhoneList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","phoneArray","_this2","axios","get","then","response","setState","data","catch","err","console","log","alert","map","key","model","brand","price","src","image","alt","PhoneDetails","specs","params","match","process","phoneId","withCredentials","_this$state","oneSpec","index","AddPhone","isSubmitSuccessful","event","_event$target","target","name","value","defineProperty","preventDefault","post","_this3","Redirect","onSubmit","handleSubmit","onChange","genericSync","type","placeholder","syncSpecs","Signup","fullName","email","originalPassword","currentUser","userDoc","onUserChange","Login","App","Axios","syncCurrentUser","delete","_this4","NavLink","exact","onClick","logoutClick","Switch","Route","path","component","render","SignupPage","LoginPage","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd0c0501.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass HomePage extends Component {\n  render() {\n    return(\n      <section className=\"HomePage\">\n        <h2>HomePage</h2>\n        <p>Welcome to Ironphones! Your favorite store for overpriced phones.</p>\n      </section>\n    )\n  }\n}\n\nexport default HomePage;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass NotFound extends Component {\n  render() {\n    return(\n      <section className=\"NotFound\">\n        <h2>404 Not Found</h2>\n\n        <p>Sorry, the page you are looking for doesn't exist.</p>\n\n        <p>\n          Don't hang up the phone, though!\n          <Link to=\"/\">See Our Inventory</Link>\n        </p>\n      </section>\n    )\n  }\n}\n\nexport default NotFound;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nfunction getPhoneUrl(onePhone) {\n  return `/phone-details/${onePhone._id}`;\n}\n\nclass PhoneList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // initial array is empty while we are waiting fore the API results\n      phoneArray: [],\n    }\n  }\n\n  // React will call \"componentDidMount()\" automatically when PhoneList loads\n  componentDidMount() {\n    // Retrieve the info from the API as soon as the component loads\n    axios.get(process.env.REACT_APP_SERVER_URL + \"/api/phones\")\n    .then(response => {\n      // update our state array with the data from the API\n      this.setState({ phoneArray: response.data });\n    })\n    .catch(err => {\n      console.log(\"Phone List ERROR\", err);\n      alert(\"Sorry! Something went wrong.\");\n    });\n  }\n\n  render() {\n    const { phoneArray } = this.state;\n    return(\n      <section className=\"PhoneList\">\n        <h2>Our Phones</h2>\n\n        <Link to=\"/add-phone\">Add Your Phone</Link>\n\n        {phoneArray.map(onePhone => {\n          return (\n            <li key={onePhone._id}>\n              <h3>\n                <Link to={getPhoneUrl(onePhone)}>\n                  {onePhone.model}\n                </Link>\n              </h3>\n              <p>by {onePhone.brand}</p>\n              <p>{onePhone.price} €</p>\n              <img src={onePhone.image} alt={onePhone.model}/>\n            </li>\n          );\n        })}\n      </section>\n    )\n  }\n}\n\nexport default PhoneList;","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass PhoneDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // we need the initial \"specs\" array to avoid an error with \".map()\"\n      specs: []\n    }\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n\n    axios.get(process.env.REACT_APP_SERVER_URL + `/api/phones/${params.phoneId}`, { withCredentials: true })\n    .then(response => {\n      console.log(\"Phone Details\", response.data);\n      // update our state object with the data from the API\n      this.setState(response.data);\n    })\n    .catch(err => {\n      console.log(\"Phone Details\", err);\n      alert(\"Sorry ! Something went wrong.\");\n    })\n  } \n\n  render() {\n    const { _id, brand, model, price, image, specs } = this.state;\n    return ( \n      <section className=\"PhoneDetails\">\n        <h2>Phone Details</h2>\n\n        <h3>{model}</h3>\n        <p>by <i>{brand}</i></p>\n        <b>{price} €</b>\n        <img src={image} alt={model} />\n\n        <h4>Specs</h4>\n        <ul>\n          {specs.map((oneSpec, index) => {\n            return(\n              <li key={index}>\n                {oneSpec}\n              </li>\n            )\n          })}\n        </ul>\n\n        <p>Product no. {_id}</p>\n      </section>\n    )\n  }\n};\n\nexport default PhoneDetails;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nclass AddPhone extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      model: \"\",\n      brand: \"\",\n      price: \"\",\n      image: \"\",\n      // each empty string in \"specs\" will display an <input> tag\n      specs: [\"\", \"\", \"\"],\n      isSubmitSuccessful: false\n    };\n  }\n\n  genericSync(event) {\n    const {name, value} = event.target;\n    this.setState({[name]: value})\n  }\n\n  syncSpecs(event, index) {\n    const { specs } = this.state;\n    // Update the spec value at the given indexa\n    specs[index] = event.target.value;\n    // Set the state with the updated specs array\n    this.setState({ specs });\n  }\n\n  handleSubmit(event) {\n    // stop the page refresh\n    event.preventDefault();\n\n    // PUT and POST requests receive a 2ND argument: the info to submit\n    // (we are submmitting the state we've gathered from the form)\n    axios.post(process.env.REACT_APP_SERVER_URL + \"/api/phones\", this.state)\n      .then(response => {\n        console.log(\"Add Phone\", response.data);\n        this.setState({ isSubmitSuccessful: true }); \n      })\n      .catch(err => {\n        console.log(\"Add Phone fail\", err);\n        alert(\"Sorry! Something went wrong\");\n      });\n  }\n\n  render() {\n    if (this.state.isSubmitSuccessful) {\n      return <Redirect to=\"/phone-list\" />\n    }\n    return(\n      <section className=\"AddPhone\">\n        <h2>Add a Phone</h2>\n\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <label>\n            Model: <input value={this.state.model}\n                      onChange={event => this.genericSync(event)}\n                      type=\"text\" name=\"model\" placeholder=\"iPhone Xs\" />\n          </label>\n\n          <label>\n            Brand: <input value={this.state.brand}\n                      onChange={event => this.genericSync(event)}\n                      type=\"text\" name=\"brand\" placeholder=\"Apple\" />\n          </label>\n\n          <label>\n            Price: <input value={this.state.price}\n                      onChange={event => this.genericSync(event)}\n                      type=\"number\" name=\"price\" placeholder=\"1150\" />\n          </label>\n\n          <label>\n            Image URL: <input value={this.state.image}\n                      onChange={event => this.genericSync(event)}\n                      type=\"url\" name=\"image\" placeholder=\"http://example.com\" />\n          </label>\n\n          <h3>Specs</h3>\n          <p>3 characters or more</p>\n          {this.state.specs.map((oneSpec, index) => {\n            return <input key={index} type=\"text\" value={oneSpec}\n                onChange={event => this.syncSpecs(event, index)} />\n          })}\n\n          <button>Save This Phone</button>\n        </form>\n      </section>\n    )\n  }\n}\n\nexport default AddPhone;","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fullName: \"\",\n      email: \"\",\n      originalPassword: \"\",\n      currentUser: null\n    }\n  }\n\n  genericSync(event) {\n    const { name, value } = event.target;\n\n    this.setState({[name]: value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    axios.post(process.env.REACT_APP_SERVER_URL + \"/api/signup\", this.state)\n    .then(response => {\n      console.log(\"Signup page\", response.data);\n      const { userDoc } = response.data;\n      // send \"userDoc\" to App.js function that changes \"currentUser\"\n      this.props.onUserChange(userDoc);\n    })\n    .catch(err => {\n      console.log(\"Something went wrong\", err);\n      alert(\"No sign up possible ! Try again.\")\n    });\n  }\n\n  render() {\n    // check currentUser (received from App.js)\n    if (this.props.currentUser) {\n      return (\n        <section>\n          <h2>You are signed up !</h2>\n          <o>\n            Welcome, {this.props.currentUser.fullName}!\n            Your user ID is <b>{this.props.currentUser._id}</b>\n          </o>\n        </section>\n      )\n    }\n\n    return(\n      <section>\n        <h2>Sign Up</h2>\n\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <label>\n            Full Name: <input onChange={event => this.genericSync(event)} value={this.state.fullName} type=\"text\" name=\"fullName\" placeholder=\"Roger\" />\n          </label>\n\n          <label>\n            Email: <input onChange={event => this.genericSync(event)} value={this.state.email} type=\"email\" name=\"email\" placeholder=\"Roger@rotisserie.com\" />\n          </label>\n\n          <label>\n            Password: <input onChange={event => this.genericSync(event)} value={this.state.originalPassword} type=\"password\" name=\"originalPassword\" placeholder=\"E'l'donne pas à ta gonz\" />\n          </label>\n\n          <button>Sign Up</button>\n        </form>\n      </section>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      originalPassword: \"\",\n      currentUser: null,\n    }\n  }\n\n  genericSync(event) {\n    const { name, value } = event.target;\n\n    this.setState({[name]: value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    axios.post(process.env.REACT_APP_SERVER_URL + \"/api/login\", this.state, { withCredentials: true })\n    .then(response => {\n      const { userDoc } = response.data;\n      // send \"userDoc\" to App.js function that changes \"currentUser\"\n      this.props.onUserChange(userDoc);\n    })\n    .catch(err => {\n      console.log(\"Something went wrong\", err)\n    })\n  }\n\n  render() {\n    // check currentUser (received from App.js)\n    if (this.props.currentUser) {\n      return <Redirect to=\"/phone-list\" />\n    }\n\n    return(\n      <section>\n        <h2>Log In</h2>\n\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <label>\n            Email: <input onChange={event => this.genericSync(event)} value={this.state.email} type=\"email\" name=\"email\" placeholder=\"Roger@rotisserie.com\" />\n          </label>\n\n          <label>\n            Password: <input onChange={event => this.genericSync(event)} value={this.state.originalPassword} type=\"password\" name=\"originalPassword\" placeholder=\"E'l'donne pas à ta gonz\" />\n          </label>\n\n          <button>Log In</button>\n        </form>\n      </section>\n    )\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { Switch, Route, NavLink } from \"react-router-dom\";\n\nimport HomePage from \"./components/HomePage\";\nimport NotFound from \"./components/NotFound\";\nimport PhoneList from \"./components/PhoneList\";\nimport PhoneDetails from \"./components/PhoneDetails\";\nimport AddPhone from \"./components/AddPhone\";\nimport SignupPage from \"./components/SignupPage\";\nimport LoginPage from \"./components/LoginPage\";\n\nimport './App.css';\nimport Axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: null,\n    }\n  }\n\n  componentDidMount() {\n    // React doesn't know at the start if we are logged-in or not\n    // but we can ask the server if we are through an API request\n    Axios.get(process.env.REACT_APP_SERVER_URL + \"/api/checkuser\", \n    { withCredentials: true }) // FORCE axios to send cookies across domains\n    .then(response => {\n      console.log(\"Check User\", response.data);\n      const { userDoc } = response.data;\n      this.syncCurrentUser(userDoc);\n    })\n    .catch(err => {\n      console.log(err)\n    });\n  }\n\n  // this is the method for updating \"currentUser\"\n  // (must be defined in App.js since it's the owner of \"currentUser\" now)\n  syncCurrentUser(userDoc) {\n    this.setState({ currentUser: userDoc })\n    console.log(userDoc)\n  }\n\n  logoutClick() {\n    Axios.delete(process.env.REACT_APP_SERVER_URL + \"/api/logout\",\n    { withCredentials: true } )\n      .then(() => {\n        // make \"currentUser\" empty again (like it was at the start)\n        this.syncCurrentUser(null);\n      })\n      .catch(err => {\n        console.log(\"Sthg went wrong\", err)\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>Ironphones</h1>\n\n          <nav>\n            <NavLink exact to=\"/\">Home</NavLink>\n            <NavLink to=\"/phone-list\">Our Phones</NavLink>\n            {this.state.currentUser ? (\n              <span>\n                <b>{this.state.currentUser.email}</b>\n                <button onClick={() => this.logoutClick()} >\n                  Log Out\n                </button>\n              </span>\n            ) : (\n              <span>\n                <NavLink to=\"/signup-page\">Sign Up</NavLink>\n                <NavLink to=\"/login-page\">Log In</NavLink>\n              </span>\n            )}\n            \n          </nav>\n        </header>\n\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/phone-list\" component={PhoneList} />\n          <Route path=\"/phone-details/:phoneId\" component={PhoneDetails} />\n          <Route path=\"/add-phone\" component={AddPhone} />\n          {/* Use \"render\" instead of \"component\" to pass props */}\n          <Route path=\"/signup-page\" render={() => {\n            return <SignupPage currentUser={this.state.currentUser} onUserChange={userDoc => this.syncCurrentUser(userDoc)} />\n          }} />\n          <Route path=\"/login-page\" render={() => {\n            return <LoginPage currentUser={this.state.currentUser} onUserChange={userDoc => this.syncCurrentUser(userDoc)} />\n          }} />\n\n          {/* 404 route LAST */}\n          <Route component={NotFound} />\n        </Switch>\n\n        <footer>\n          <p>Made with 📱 at Ironhack</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\n\n\nReactDOM.render(\n  <BrowserRouter> \n    <App /> \n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}